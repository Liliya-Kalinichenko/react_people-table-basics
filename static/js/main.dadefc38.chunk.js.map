{"version":3,"sources":["utils/helpers.tsx","components/Navigation/Navigation.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","utils/httpClient.tsx","utils/constants.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/PageNotFound.tsx","Root.tsx","index.tsx"],"names":["getTabClassName","isActive","classNames","Navigation","className","role","to","App","HomePage","Loader","handleResponse","response","ok","Error","status","statusText","json","client","delay","Promise","resolve","setTimeout","then","fetch","TABLE_COLUMNS","PersonLink","person","name","sex","born","died","fatherName","motherName","slug","mother","father","personId","useParams","PeopleTable","people","map","column","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadError","setIsLoadError","useEffect","data","find","human","getPreparedPeople","catch","finally","length","PageNotFound","Root","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.dadefc38.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Person } from '../types';\n\nexport function getTabClassName({ isActive }: { isActive: boolean }) {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n}\n\nexport function getPreparedPeople(people: Person[]) {\n  return people.map(person => ({\n    ...person,\n    mother: people.find(human => human.name === person.motherName),\n    father: people.find(human => human.name === person.fatherName),\n  }));\n}\n","import { NavLink } from 'react-router-dom';\nimport { getTabClassName } from '../../utils/helpers';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={getTabClassName}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getTabClassName}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport React from 'react';\n\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\nconst BASE_URL\n= 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst handleResponse = (response: Response) => {\n  if (!response.ok) {\n    throw new Error(`${response.status} ${response.statusText}`);\n  }\n\n  return response.json();\n};\n\nexport const client = {\n  get<T>(): Promise<T> {\n    return wait(1000)\n      .then(() => fetch(BASE_URL))\n      .then(handleResponse);\n  },\n};\n\nexport function getPeople() {\n  return client.get<Person[]>();\n}\n","export const NO_PARENT = '-';\n\nexport const FEMALE = 'f';\n\nexport const TABLE_COLUMNS = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { FEMALE, NO_PARENT } from '../../utils/constants';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const { personId } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={personId === slug ? 'has-background-warning' : ''}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={sex === FEMALE ? 'has-text-danger' : ''}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link\n            to={`/people/${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {mother.name}\n          </Link>\n        ) : (\n          <p>\n            {motherName ? `${motherName}` : NO_PARENT}\n          </p>\n        )}\n      </td>\n      <td>\n        {father ? (\n          <Link to={`/people/${father.slug}`}>\n            {father.name}\n          </Link>\n        ) : (\n          <p>\n            {fatherName ? `${fatherName}` : NO_PARENT}\n          </p>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { TABLE_COLUMNS } from '../../utils/constants';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {TABLE_COLUMNS.map(column => (\n            <th>{column}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../utils/httpClient';\nimport { getPreparedPeople } from '../utils/helpers';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadError, setIsLoadError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((data) => setPeople(getPreparedPeople(data)))\n      .catch(() => {\n        setIsLoadError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isLoadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && !isLoadError && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport React from 'react';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nexport const Root: React.FC = () => (\n  <Router>\n    <Routes>\n      <Route\n        path=\"/home\"\n        element={<Navigate to=\"/\" replace />}\n      />\n\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people\">\n          <Route\n            index\n            element={<PeoplePage />}\n          />\n          <Route\n            path=\":personId\"\n            element={<PeoplePage />}\n          />\n        </Route>\n\n        <Route\n          path=\"*\"\n          element={<PageNotFound />}\n        />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}